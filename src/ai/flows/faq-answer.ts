// This file is machine-generated - edit at your own risk.

'use server';

/**
 * @fileOverview This file defines a Genkit flow for answering FAQs about school procedures and policies.
 *
 * The flow takes a question as input and returns an answer generated by the AI.
 *
 * - `answerFaq` - A function that takes a question and returns an answer.
 * - `FaqAnswerInput` - The input type for the `answerFaq` function.
 * - `FaqAnswerOutput` - The return type for the `answerFaq` function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const FaqAnswerInputSchema = z.object({
  question: z.string().describe('The question to be answered.'),
});

export type FaqAnswerInput = z.infer<typeof FaqAnswerInputSchema>;

const FaqAnswerOutputSchema = z.object({
  answer: z.string().describe('The answer to the question.'),
});

export type FaqAnswerOutput = z.infer<typeof FaqAnswerOutputSchema>;

export async function answerFaq(input: FaqAnswerInput): Promise<FaqAnswerOutput> {
  return faqAnswerFlow(input);
}

const faqAnswerPrompt = ai.definePrompt({
  name: 'faqAnswerPrompt',
  input: {schema: FaqAnswerInputSchema},
  output: {schema: FaqAnswerOutputSchema},
  prompt: `You are a helpful AI assistant that answers questions about school procedures and policies.

  Question: {{{question}}}

  Answer:`, // Use the question directly in the prompt
});

const faqAnswerFlow = ai.defineFlow(
  {
    name: 'faqAnswerFlow',
    inputSchema: FaqAnswerInputSchema,
    outputSchema: FaqAnswerOutputSchema,
  },
  async input => {
    const {output} = await faqAnswerPrompt(input);
    return output!;
  }
);
